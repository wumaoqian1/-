/**
 * Production server entry file
 * Áîü‰∫ßÁéØÂ¢ÉÊúçÂä°Âô®ÂÖ•Âè£Êñá‰ª∂
 */
import app from './app.js';

/**
 * ÂêØÂä®Áîü‰∫ßÁéØÂ¢ÉÊúçÂä°Âô®
 * Start production server with enhanced configuration
 */
const PORT = parseInt(process.env.PORT || '3001', 10);
const HOST = process.env.HOST || '0.0.0.0';

// Áîü‰∫ßÁéØÂ¢ÉÊúçÂä°Âô®ÈÖçÁΩÆ
const server = app.listen(PORT, HOST, () => {
  console.log(`üöÄ Production server ready on ${HOST}:${PORT}`);
  console.log(`üìÖ Started at: ${new Date().toISOString()}`);
  console.log(`üåç Environment: ${process.env.NODE_ENV}`);
});

// ËÆæÁΩÆÊúçÂä°Âô®Ë∂ÖÊó∂
server.timeout = 30000; // 30ÁßíË∂ÖÊó∂
server.keepAliveTimeout = 65000; // Keep-aliveË∂ÖÊó∂
server.headersTimeout = 66000; // HeadersË∂ÖÊó∂

/**
 * ‰ºòÈõÖÂÖ≥Èó≠ÊúçÂä°Âô®
 * Graceful shutdown handlers
 */
const gracefulShutdown = (signal: string) => {
  console.log(`\n${signal} signal received`);
  console.log('üîÑ Starting graceful shutdown...');
  
  server.close((err) => {
    if (err) {
      console.error('‚ùå Error during server shutdown:', err);
      process.exit(1);
    }
    
    console.log('‚úÖ Server closed successfully');
    console.log('üëã Goodbye!');
    process.exit(0);
  });
  
  // Âº∫Âà∂ÂÖ≥Èó≠Ë∂ÖÊó∂
  setTimeout(() => {
    console.error('‚ö†Ô∏è  Forced shutdown due to timeout');
    process.exit(1);
  }, 10000);
};

// ÁõëÂê¨ÂÖ≥Èó≠‰ø°Âè∑
process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
process.on('SIGINT', () => gracefulShutdown('SIGINT'));

// Â§ÑÁêÜÊú™ÊçïËé∑ÁöÑÂºÇÂ∏∏
process.on('uncaughtException', (err) => {
  console.error('‚ùå Uncaught Exception:', err);
  gracefulShutdown('UNCAUGHT_EXCEPTION');
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ùå Unhandled Rejection at:', promise, 'reason:', reason);
  gracefulShutdown('UNHANDLED_REJECTION');
});

export default app;